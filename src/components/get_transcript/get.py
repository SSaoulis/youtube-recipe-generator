import sys
import traceback
from urllib.parse import urlparse, parse_qs
from typing import Optional

from youtube_transcript_api import YouTubeTranscriptApi
from youtube_transcript_api.formatters import JSONFormatter

ytt_api = YouTubeTranscriptApi()
formatter = JSONFormatter()

# Warning: function generated By ChatGPT
def extract_youtube_id(url: str) -> Optional[str]:
    """Gets the ID from an input youtube URL string

    1. Standard youtube URL:
        "https://www.youtube.com/watch?v=VIdlVi-VzPY"
    2. Youtube Share URL:
        "https://youtu.be/VIdlVi-VzPY?si=T2OVTqBReA0BMkGV&t=1079"

    Args:
        url (str): The input URL string to get the video ID from .

    Raises:
        RuntimeError: If an ID is not found.

    Returns:
        str | None: The ID from the string. None if not found.
    """
    parsed_url = urlparse(url)

    if "youtube.com" in parsed_url.netloc:
        query_params = parse_qs(parsed_url.query)
        return query_params.get("v", [None])[0]

    elif "youtu.be" in parsed_url.netloc:
        return parsed_url.path.lstrip("/").split("?")[0].split("&")[0]

    raise RuntimeError(
        f"Failed to get an ID from the url:\n\t{url}\nCheck the URL input"
    )


def get_transcript_from_url(url: str) -> str:
    """Takes a youtube video URL and get's the transcript from the video metadata.
    Uses youtube_transcript_api, avoiding fetching the video.

    Args:
        url (str): The video URL. Can be from a "youtu.be" or "youtube" format.

    Returns:
        str: A string containing the entire video transcript.
    """
    # Parse the ID from the URL
    id = extract_youtube_id(url)

    try:
        fetched_transcript = ytt_api.fetch(id, languages=["en-US", "en", "en-UK"])
    except Exception:
        traceback.print_exc()
        sys.exit(1)

    # Concatentate the strings from the transcript, ignore timestamps
    transcript = ""
    for snippet in fetched_transcript:
        transcript += " " + snippet.text

    return transcript
